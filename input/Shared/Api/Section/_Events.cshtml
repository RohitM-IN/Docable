@using Microsoft.AspNetCore.Html
@{
	IReadOnlyList<IDocument> events = Document.GetDocumentList(CodeAnalysisKeys.Members)
		?.Where(x => x.GetBool(CodeAnalysisKeys.IsResult) && x.GetString(CodeAnalysisKeys.Kind) == "Event")
		.OrderBy(x => x.GetString(CodeAnalysisKeys.DisplayName))
		.ToList();
	if(events?.Count > 0)
	{
		<h1 id="Events">Events</h1>
		<div class="table-responsive">
			<table class="table table-striped table-hover three-cols">
				<thead>
					<tr>
						<th>Name</th>
						<th>Type</th>
						<th>Summary</th>
					</tr>
				</thead>
				<tbody>
					@foreach(IDocument evt in events)
					{
						IDocument type = evt.GetDocument(CodeAnalysisKeys.Type);
						<tr>
							<td>@Context.GetTypeLink(evt, false)</td>
							<td>@(type is null ? new HtmlString(string.Empty) : Context.GetTypeLink(type))</td>
							<td>
								<div>@Html.Raw(evt.GetString(CodeAnalysisKeys.Summary))</div>
								@{
									IDocument containingType = evt.GetDocument(CodeAnalysisKeys.ContainingType);
									if(!Document.IdEquals(containingType))
									{
										<div><small><em>Inherited from @Context.GetTypeLink(containingType)</em></small></div>
									}
									if(evt.GetBool(CodeAnalysisKeys.IsStatic))
									{
										<div><small><em>static</em></small></div>
									}
								}
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	}
}